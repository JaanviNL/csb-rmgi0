{"version":3,"sources":["src/index.js"],"names":["reverseString","str","reverseOfString","split","reverse","join","isPalindrome","convertDateToString","date","stringDate","day","month","year","toString","getAllDateFormat","slice","checkPalindromeForAllDateFromat","listOfDates","flag","i","length","leapYear","nextDate","nextPalindromeDate","counter","datePalindromeNext","input","document","querySelector","btn","result","onClickHandler","e","listOfUserInput","value","Number","innerText","addEventListener"],"mappings":"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","file":"src.dd34ba7c.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\n\nfunction reverseString(str) {\n  var reverseOfString = str.split(\"\").reverse().join(\"\");\n  return reverseOfString;\n}\n\nfunction isPalindrome(str) {\n  var reverseStr = reverseString(str);\n  return str == reverseStr;\n}\n\nfunction convertDateToString(date) {\n  var stringDate = {\n    day: \"\",\n    month: \"\",\n    year: \"\"\n  };\n  if (date.day < 10) {\n    stringDate.day = \"0\" + date.day;\n  } else {\n    stringDate.day = date.day.toString();\n  }\n\n  if (date.month < 10) {\n    stringDate.month = \"0\" + date.month;\n  } else {\n    stringDate.month = date.month.toString();\n  }\n\n  stringDate.year = date.year.toString();\n\n  return stringDate;\n}\n\nfunction getAllDateFormat(date) {\n  var stringDate = convertDateToString(date);\n\n  var ddmmyyyy = stringDate.day + stringDate.month + stringDate.year;\n  var mmddyyyy = stringDate.month + stringDate.day + stringDate.year;\n  var yyyyddmm = stringDate.year + stringDate.day + stringDate.month;\n  var ddmmyy = stringDate.day + stringDate.month + stringDate.year.slice(-2);\n  var mmddyy = stringDate.month + stringDate.day + stringDate.year.slice(-2);\n  var yyddmm = stringDate.year.slice(-2) + stringDate.day + stringDate.month;\n\n  return [ddmmyyyy, mmddyyyy, yyyyddmm, ddmmyy, mmddyy, yyddmm];\n}\n\nfunction checkPalindromeForAllDateFromat(date) {\n  var listOfDates = getAllDateFormat(date);\n  var flag = false;\n\n  for (let i = 0; i < listOfDates.length; i++) {\n    if (isPalindrome(listOfDates[i])) {\n      flag = true;\n      break;\n    }\n  }\n  return flag;\n}\n\nfunction leapYear(year) {\n  if (year % 400 == 0) {\n    return true;\n  } else if (year % 100 == 0) {\n    return false;\n  } else if (year % 4 == 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction nextDate(date) {\n  var nextDate = {\n    day: date.day + 1,\n    month: date.month,\n    year: date.year\n  };\n\n  const daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  // for FEB\n  if (nextDate.month == 2) {\n    if (leapYear(nextDate.year)) {\n      if (nextDate.day > 29) {\n        nextDate.day = 1;\n        nextDate.month++;\n      }\n    } else {\n      if (nextDate.day > 28) {\n        nextDate.day = 1;\n        nextDate.month++;\n      }\n    }\n  }\n  if (nextDate.day > daysInMonth[nextDate.month - 1]) {\n    nextDate.day = 1;\n    nextDate.month++;\n  }\n  if (nextDate.month > 12) {\n    (nextDate.month = 1), nextDate.year++;\n  }\n\n  return nextDate;\n}\n\nfunction nextPalindromeDate(date) {\n  var counter = 0;\n  var datePalindromeNext = nextDate(date);\n\n  while (1) {\n    if (checkPalindromeForAllDateFromat(datePalindromeNext)) {\n      break;\n    }\n    counter++;\n    datePalindromeNext = nextDate(datePalindromeNext);\n  }\n  return [counter, datePalindromeNext];\n}\n\nconst input = document.querySelector(\"#input-dob\");\nconst btn = document.querySelector(\".submit\");\nconst result = document.querySelector(\".message\");\n\nbtn.addEventListener(\"click\", onClickHandler);\n\nfunction onClickHandler(e) {\n  var listOfUserInput = input.value.split(\"-\");\n  var date = {\n    day: Number(listOfUserInput[2]),\n    month: Number(listOfUserInput[1]),\n    year: Number(listOfUserInput[0])\n  };\n\n  if (checkPalindromeForAllDateFromat(date)) {\n    result.innerText = `YAY!!! Your birtday is a Palindrome! ðŸŽ‰`;\n  } else {\n    var [counter, datePalindromeNext] = nextPalindromeDate(date);\n    result.innerText = `OOPS! Your birtday is not a Palindrome. \\n Next palindrome date is ${datePalindromeNext.day}/${datePalindromeNext.month}/${datePalindromeNext.year} \\n You missed it by ${counter} days.`;\n  }\n}\n"]}